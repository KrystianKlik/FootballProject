version: '3.8'

services:
  db:
    image: postgres:17-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: Adrian
      POSTGRES_PASSWORD: SuperSecretPassword
      POSTGRES_DB: Ekstraklasa
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U Adrian -d Ekstraklasa"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrator:
    build:
      context: ./FootballProject.DbUp
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      - CONNECTION_STRING=Host=db;Port=5432;Database=Ekstraklasa;Username=Adrian;Password=SuperSecretPassword
    volumes:
      - ./FootballProject.DbUp/Migrations:/app/Migrations
    entrypoint: ["dotnet", "FootballProject.DbUp.dll"]
    restart: "no"

  footballproject:
    build:
      context: ./FootballProject
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      migrator:
        condition: service_started  # Note: Docker Compose v3 doesn't support `service_completed_successfully`
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=your_database;Username=your_username;Password=your_password
    ports:
      - "8080:8080"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: adrian@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgadmin-data:

